package no.nav.okonomi.tilbakekrevingservice;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.1.3
 * 2025-09-05T06:18:11.622+02:00
 * Generated source version: 4.1.3
 *
 */
@WebServiceClient(name = "TilbakekrevingService",
                  wsdlLocation = "classpath:wsdl/no/nav/tilbakekreving/tilbakekreving-v1-tjenestespesifikasjon.wsdl",
                  targetNamespace = "http://okonomi.nav.no/tilbakekrevingService/")
public class TilbakekrevingService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://okonomi.nav.no/tilbakekrevingService/", "TilbakekrevingService");
    public static final QName TilbakekrevingServicePort = new QName("http://okonomi.nav.no/tilbakekrevingService/", "TilbakekrevingServicePort");
    static {
        URL url = TilbakekrevingService.class.getClassLoader().getResource("wsdl/no/nav/tilbakekreving/tilbakekreving-v1-tjenestespesifikasjon.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(TilbakekrevingService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/no/nav/tilbakekreving/tilbakekreving-v1-tjenestespesifikasjon.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public TilbakekrevingService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TilbakekrevingService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TilbakekrevingService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public TilbakekrevingService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public TilbakekrevingService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public TilbakekrevingService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns TilbakekrevingPortType
     */
    @WebEndpoint(name = "TilbakekrevingServicePort")
    public TilbakekrevingPortType getTilbakekrevingServicePort() {
        return super.getPort(TilbakekrevingServicePort, TilbakekrevingPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TilbakekrevingPortType
     */
    @WebEndpoint(name = "TilbakekrevingServicePort")
    public TilbakekrevingPortType getTilbakekrevingServicePort(WebServiceFeature... features) {
        return super.getPort(TilbakekrevingServicePort, TilbakekrevingPortType.class, features);
    }

}
